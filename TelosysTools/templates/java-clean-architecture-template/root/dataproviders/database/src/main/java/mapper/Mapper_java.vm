#set( $linkFields = $entity.getAttributesByCriteria( $const.NOT_KEY, $const.IN_SELECTED_LINKS ) )
package ${ROOT_PKG}.dataprovider.${entity.name.toLowerCase()}.mapper;

import org.mapstruct.Mapper;

import ${ROOT_PKG}.core.${entity.name.toLowerCase()}.domain.${entity.name};
#foreach( $field in $entity.selectedLinks )
#set ( $fieldType = $field.fieldType )
#if ( !$fieldType.contains("Enum_") )
import ${ROOT_PKG}.dataprovider.${fieldType.toLowerCase()}.mapper.${fieldType}Mapper;
#end
#end
import ${ROOT_PKG}.dataprovider.${entity.name.toLowerCase()}.domain.${entity.name}Entity;

#include ( "/include/author.vm" )

#set ( $mappers = [] )
#set( $linkFields = $entity.getAttributesByCriteria( $const.NOT_KEY, $const.IN_SELECTED_LINKS ) )
#foreach( $field in $entity.selectedLinks )
#set ( $fieldType = $field.fieldType )
#if ( !$fieldType.contains("Enum_") )
#set($x = $mappers.add("${fieldType}Mapper.class"))
#end
#end
#if ( $mappers.size() == 0 )
@Mapper
#else
@Mapper(uses = {#foreach( $field in $mappers )${fieldType}Mapper.class#if( $foreach.hasNext ), #end#end})
#end
public interface ${entity.name}Mapper {

    ${entity.name} of(final ${entity.name}Entity ${entity.name.toLowerCase()}Entity);

    ${entity.name}Entity of(final ${entity.name} ${entity.name.toLowerCase()});
}
